# ----------------------------------------------------------------------------
# Copyright 2014 Nervana Systems Inc.  All rights reserved.
# ----------------------------------------------------------------------------
[data]
type=data
dataIdx=0

[labels]
type=data
dataIdx=1


[conv1a]
# input is 24x24x3
# output is 24x24x32
type=conv
inputs=data
channels=3
filters=32
padding=1
stride=1
filterSize=3
neuron=relu
gpu=0,1,2,3
initW=0.01
sumWidth=4
[conv1b]
# this layer is so absurdly big it needs to be split in two. 
type=conv
inputs=data
channels=3
filters=32
padding=1
stride=1
filterSize=3
neuron=relu
gpu=0,1,2,3
initW=0.01
sumWidth=4
# [conv1c]
# type=conv
# inputs=data
# channels=3
# filters=16
# padding=1
# stride=1
# filterSize=3
# neuron=relu
# gpu=0,1,2,3
# initW=0.01
# sumWidth=4
# [conv1d]
# type=conv
# inputs=data
# channels=3
# filters=16
# padding=1
# stride=1
# filterSize=3
# neuron=relu
# gpu=0,1,2,3
# initW=0.01
# sumWidth=4
# This is like a concatenation layer
[conv1conc]
type=pass
inputs=conv1a,conv1b
# tried to split a and b onto different GPUs, didn't work
#gpu=0,1,2,3

[mp1]
type=pool
pool=max
inputs=conv1conc
sizeX=2
stride=2
channels=64
#start=-1


[conv2a]
type=conv
inputs=mp1
channels=64
filters=128
padding=1
stride=1
filterSize=3
neuron=relu
initW=0.01
sumWidth=4
# [conv2b]
# type=conv
# inputs=mp1
# channels=64
# filters=64
# padding=1
# stride=1
# filterSize=3
# neuron=relu
# initW=0.01
# sumWidth=4
# [conv2conc]
# type=pass
# inputs=conv2a,conv2b


[mp2]
type=pool
pool=max
inputs=conv2a
sizeX=2
stride=2
channels=128
#start=-1

# conv3+conv4 are effective 5x5 filters

[conv3]
type=conv
inputs=mp2
channels=128
filters=256
padding=1
stride=1
filterSize=3
neuron=relu
initW=0.01
sumWidth=4

[conv4]
type=conv
inputs=conv3
channels=256
filters=256
padding=1
stride=1
filterSize=3
neuron=relu
initW=0.01
sumWidth=4

[mp3]
type=pool
pool=max
inputs=conv4
sizeX=2
stride=2
channels=256
#start=-1

# conv5+conv6 is another effective 5x5

[conv5]
type=conv
inputs=mp3
channels=256
filters=512
padding=1
stride=1
filterSize=3
neuron=relu
initW=0.01
sumWidth=4

[conv6]
type=conv
inputs=conv5
channels=512
filters=512
padding=1
stride=1
filterSize=3
neuron=relu
initW=0.01
sumWidth=4

[mp4]
type=pool
pool=max
inputs=conv6
sizeX=2
stride=2
channels=512
##start=-1


[conv7]
type=conv
inputs=mp4
channels=512
filters=512
padding=1
stride=1
filterSize=3
neuron=relu
initW=0.01
sumWidth=4

[conv8]
type=conv
inputs=conv7
channels=512
filters=512
padding=1
stride=1
filterSize=3
neuron=relu
initW=0.01
sumWidth=4

[mp5]
type=pool
pool=max
inputs=conv8
sizeX=2
stride=2
channels=512


[fc4096a]
type=fc
inputs=mp5
outputs=4096
initW=0.01
initB=1
neuron=relu


[dropout1]
type=dropout2
inputs=fc4096a


[fc4096b]
type=fc
inputs=dropout1
outputs=4096
initW=0.01
initB=1
neuron=relu


[dropout2]
type=dropout2
inputs=fc4096b



[fc1000]
type=fc
outputs=1000
inputs=dropout2
initW=0.01

[probs]
type=softmax
inputs=fc1000

[logprob]
type=cost.logreg
inputs=labels,probs
gpu=0,1,2,3
